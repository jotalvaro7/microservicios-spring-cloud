#Docker-compose with msvc-eureka, zipkin, msvc-gateway, msvc-dragon-ball
version: '3.9'
services:

  service-registry:
    container_name: service-registry
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      PORT: 8761
    networks:
      - spring
    restart: always

  zipkin-container:
    container_name: zipkin-container
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - spring
    restart: always

  api-gateway:
    container_name: api-gateway
    build:
      context: ./spring-gateway
      dockerfile: Dockerfile
    ports:
      - "9095:9095"
    environment:
      PORT: 9095
      EUREKA_CLIENT: service-registry:8761
      ZIPKIN_CLIENT: zipkin-container:9411
    networks:
      - spring
    depends_on:
      - service-registry
      - zipkin-container
    restart: always

  config-server:
    container_name: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      PORT: 8888
    networks:
      - spring
    restart: always

  msvc-dragon-ball:
    container_name: msvc-dragon-ball
    build:
      context: ./dragon-ball
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      PORT: 8082
      EUREKA_CLIENT: service-registry:8761
      ZIPKIN_CLIENT: zipkin-container:9411
      CONFIG_CLIENT: config-server:8888
    networks:
      - spring
    depends_on:
      - service-registry
      - config-server
      - zipkin-container
    restart: always
#
#  client:
#    container_name: client
#    build:
#      context: ./client-standalone
#      dockerfile: Dockerfile
#    ports:
#      - "6060:6060"
#    environment:
#      PORT: 6060
#    networks:
#      - spring
#    depends_on:
#      - msvc-dragon-ball
#    restart: always

networks:
    spring:
        name: spring